// Generated by CoffeeScript 1.3.1
(function() {
  var PianoKey;

  PianoKey = (function() {

    PianoKey.name = 'PianoKey';

    PianoKey.prototype.pressedOffset = 10;

    PianoKey.prototype.recoverSpeed = 0.2;

    function PianoKey(_arg) {
      var color, geometry, height, length, material, position, width;
      width = _arg.width, length = _arg.length, height = _arg.height, color = _arg.color, position = _arg.position;
      geometry = new THREE.CubeGeometry(width, length, height);
      material = new THREE.MeshLambertMaterial({
        color: color
      });
      this.mesh = new THREE.Mesh(geometry, material);
      this.mesh.position.copy(position);
      this.originalY = position.y;
      this.pressedY = position.y - pressedOffset;
    }

    PianoKey.prototype.press = function() {
      this.mesh.position.y = this.pressedY;
      return this.isPressed = true;
    };

    PianoKey.prototype.release = function() {
      return this.isPressed = false;
    };

    PianoKey.prototype.update = function() {
      if (this.mesh.position.y < this.originalY && !this.isPressed) {
        return this.mesh.position.y += Math.min(this.originalY - this.mesh.position.y, this.recoverSpeed);
      }
    };

    return PianoKey;

  })();

}).call(this);
